# Marathi Verb Tense Conjugator (Demo)

This repository contains a simple Python function that generates verb forms for **different tenses** by attaching suffixes to a given verb root.  
It is a **demo model** to illustrate basic tense patterns in Marathi, not a complete or linguistically accurate conjugator.

---

## ðŸ”¹ How It Works
The function `marathi_verb_tense(verb, tense)` takes:
- **verb**: a verb root in Latin script (for simplicity, e.g., `"kha"`, `"bol"`, `"zop"`)  
- **tense**: one of `"present"`, `"past"`, `"future"`, `"imperative"`  

It then looks up suffixes for **person + number** (first, second, third; singular, plural) in a dictionary.  
For imperatives, only **second person singular/plural** are supported.  

---

## ðŸ”¹ Rule Mapping

### Present
- First Singular â†’ `to`
- Second Singular â†’ `tos`
- Third Singular â†’ `to`
- First Plural â†’ `to`
- Second Plural â†’ `ta`
- Third Plural â†’ `tat`

### Past
- First Singular â†’ `lo`
- Second Singular â†’ `las`
- Third Singular â†’ `la`
- First Plural â†’ `lo`
- Second Plural â†’ `lat`
- Third Plural â†’ `le`

### Future
- First Singular â†’ `n`
- Second Singular â†’ `shil`
- Third Singular â†’ `l`
- First Plural â†’ `lu`
- Second Plural â†’ `É»al`
- Third Plural â†’ `til`

### Imperative
- Second Singular â†’ `e`
- Second Plural â†’ `o`

---

## ðŸ”¹ Code

```python
def marathi_verb_tense(verb, tense):
    # Define the verb conjugation rules for different tenses
    verb_conjugation = {
        'present': {
            'first_singular': verb + 'to',
            'second_singular': verb + 'tos',
            'third_singular': verb + 'to',
            'first_plural': verb + 'to',
            'second_plural': verb + 'ta',
            'third_plural': verb + 'tat'
        },
        'past': {
            'first_singular': verb + 'lo',
            'second_singular': verb + 'las',
            'third_singular': verb + 'la',
            'first_plural': verb + 'lo',
            'second_plural': verb + 'lat',
            'third_plural': verb + 'le'
        },
        'future': {
            'first_singular': verb + 'n',
            'second_singular': verb + 'shil',
            'third_singular': verb + 'l',
            'first_plural': verb + 'lu',
            'second_plural': verb + 'É»al',
            'third_plural': verb + 'til'
        },
        'imperative': {
            'second_singular': verb + 'e',
            'second_plural': verb + 'o'
        }
    }

    # Get the verb form based on the tense
    if tense in verb_conjugation:
        verb_form = verb_conjugation[tense]
    elif tense == 'third_singular':
        verb_form = verb_conjugation['past']['third_singular']
    elif tense == 'first_plural':
        verb_form = verb_conjugation['present']['first_plural']
    elif tense == 'second_plural':
        verb_form = verb_conjugation['present']['second_plural']
    elif tense == 'third_plural':
        verb_form = verb_conjugation['present']['third_plural']
    else:
        verb_form = verb_conjugation['past']['third_plural']

    return verb_form
