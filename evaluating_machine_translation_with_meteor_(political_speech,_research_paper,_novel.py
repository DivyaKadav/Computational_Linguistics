# -*- coding: utf-8 -*-
"""Evaluating Machine Translation with METEOR (Political Speech, Research Paper, Novel

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SgSqSViA1W9r5qVMpKuhn5MGeQE9xpW5
"""

# Install and import necessary libraries
!pip install nltk matplotlib pandas
import nltk
nltk.download('punkt')

import pandas as pd
import matplotlib.pyplot as plt
from nltk.translate.meteor_score import meteor_score
import os

# ========== STEP 0: Upload CSVs manually ==========
from google.colab import files
print("Please upload POL.csv, OPX.csv, and MRP.csv")
uploaded = files.upload()

# ========== STEP 1: Define Functions ==========

# Function to calculate METEOR score
def calculate_meteor(reference, hypothesis):
    try:
        return meteor_score([reference], hypothesis)
    except:
        return None

# Function to process each file
def process_file(filename, text_type):
    df = pd.read_csv(filename)
    if not {'HT', 'MT'}.issubset(df.columns):
        raise ValueError(f"Missing HT or MT column in {filename}")
    df['Text_Type'] = text_type
    return df

# ========== STEP 2: Load Data ==========

# Make sure all 3 CSVs are available
if not all(os.path.isfile(f) for f in ['POL.csv', 'OPX.csv', 'MRP.csv']):
    raise FileNotFoundError("One or more required files are missing.")

print("Processing POL.csv...")
pol_data = process_file('POL.csv', 'Political Speech')

print("Processing OPX.csv...")
opx_data = process_file('OPX.csv', 'Research Paper')

print("Processing MRP.csv...")
mrp_data = process_file('MRP.csv', 'Novel')

# Combine all
all_data = pd.concat([pol_data, opx_data, mrp_data], ignore_index=True)

# ========== STEP 3: Calculate METEOR ==========

print("Calculating METEOR scores (HT vs MT)...")
all_data['METEOR_HT_vs_MT'] = all_data.apply(lambda row: calculate_meteor(row['HT'], row['MT']), axis=1)

# ========== STEP 4: Analyze by Text Type ==========

# Group by Text_Type
grouped = all_data.groupby('Text_Type')['METEOR_HT_vs_MT'].mean().reset_index()

# ========== STEP 5: Plot Graph ==========

plt.figure(figsize=(8, 6))
plt.bar(grouped['Text_Type'], grouped['METEOR_HT_vs_MT'], color=['skyblue', 'lightgreen', 'salmon'])
plt.title('Average METEOR Score (HT vs MT) by Text Type')
plt.xlabel('Text Type')
plt.ylabel('Average METEOR Score')
plt.ylim(0, 1)
plt.grid(axis='y', linestyle='--', alpha=0.7)
plt.show()

# ========== STEP 6: Display Table ==========

print("\nAverage METEOR scores:")
print(grouped)